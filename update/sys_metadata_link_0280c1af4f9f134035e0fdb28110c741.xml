<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>d23c0fc74f53134035e0fdb28110c7e2</documentkey>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="x_snc_cozmo_guard_python_commands">
    <x_snc_cozmo_guard_python_commands action="INSERT_OR_UPDATE">
        <active>false</active>
        <file_name>logo.py</file_name>
        <name>logo</name>
        <script>import cozmo&#13;
import time&#13;
&#13;
import cozmo&#13;
from cozmo.util import degrees, distance_mm, speed_mmps&#13;
&#13;
try:&#13;
    from PIL import Image&#13;
except:&#13;
    print("Looks like you need to install Pillow")&#13;
&#13;
def logo_loop(robot: cozmo.robot.Robot):&#13;
&#13;
    # load some images and convert them for display cozmo's face&#13;
    image_settings = [("/Cozmo/images/nowbw.png", Image.BICUBIC),&#13;
                      ("/Cozmo/images/heart.png", Image.BICUBIC)]&#13;
    face_images = []&#13;
    for image_name, resampling_mode in image_settings:&#13;
        image = Image.open(image_name)&#13;
&#13;
        # resize to fit on Cozmo's face screen&#13;
        resized_image = image.resize(cozmo.oled_face.dimensions(), resampling_mode)&#13;
&#13;
        # convert the image to the format used by the oled screen&#13;
        face_image = cozmo.oled_face.convert_image_to_screen_data(resized_image,&#13;
                                                                 invert_image=True)&#13;
        face_images.append(face_image)&#13;
&#13;
    num_loops = 2&#13;
    duration_s = 1.0&#13;
    &#13;
    robot.drive_straight(distance_mm(150), speed_mmps(50)).wait_for_completed()&#13;
    robot.set_head_angle(cozmo.robot.MAX_HEAD_ANGLE).wait_for_completed()&#13;
    robot.turn_in_place(degrees(360)).wait_for_completed()    &#13;
    robot.say_text("Hi!").wait_for_completed()&#13;
&#13;
    for _ in range(num_loops):&#13;
        for image in face_images:&#13;
            robot.display_oled_face_image(image, duration_s * 1000.0)&#13;
            time.sleep(duration_s)        &#13;
    &#13;
    #robot.drive_straight(distance_mm(-170), speed_mmps(50)).wait_for_completed()&#13;
    &#13;
#cozmo.robot.Robot.drive_off_charger_on_connect = False&#13;
cozmo.run_program(logo_loop)</script>
        <sys_created_by>Arnoud.Kooi</sys_created_by>
        <sys_created_on>2018-07-19 10:23:06</sys_created_on>
        <sys_id>d23c0fc74f53134035e0fdb28110c7e2</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_updated_by>Arnoud.Kooi</sys_updated_by>
        <sys_updated_on>2019-03-05 21:11:16</sys_updated_on>
        <test_parameters/>
    </x_snc_cozmo_guard_python_commands>
</record_update>
]]></payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>Arnoud.Kooi</sys_created_by>
        <sys_created_on>2018-07-20 13:29:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0280c1af4f9f134035e0fdb28110c741</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>logo.py</sys_name>
        <sys_package display_value="Cozmo Guard" source="x_snc_cozmo_guard">2df0e27d4fdf1f009881c5c18110c780</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Cozmo Guard">2df0e27d4fdf1f009881c5c18110c780</sys_scope>
        <sys_update_name>sys_metadata_link_0280c1af4f9f134035e0fdb28110c741</sys_update_name>
        <sys_updated_by>Arnoud.Kooi</sys_updated_by>
        <sys_updated_on>2019-03-05 21:13:43</sys_updated_on>
        <tablename>x_snc_cozmo_guard_python_commands</tablename>
    </sys_metadata_link>
</record_update>
