<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>ed30b8ea4f5b9f0035e0fdb28110c76d</documentkey>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="x_snc_cozmo_guard_python_commands">
    <x_snc_cozmo_guard_python_commands action="INSERT_OR_UPDATE">
        <active>false</active>
        <file_name>demo1.py</file_name>
        <name>demo1</name>
        <script>#!/usr/bin/env python3&#13;
&#13;
# Copyright (c) 2016 Anki, Inc.&#13;
#&#13;
# Licensed under the Apache License, Version 2.0 (the "License");&#13;
# you may not use this file except in compliance with the License.&#13;
# You may obtain a copy of the License in the file LICENSE.txt or at&#13;
#&#13;
#     http://www.apache.org/licenses/LICENSE-2.0&#13;
#&#13;
# Unless required by applicable law or agreed to in writing, software&#13;
# distributed under the License is distributed on an "AS IS" BASIS,&#13;
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#13;
# See the License for the specific language governing permissions and&#13;
# limitations under the License.&#13;
&#13;
'''Wait for Cozmo to see a face, and then turn on his backpack light.&#13;
&#13;
This is a script to show off faces, and how they are easy to use.&#13;
It waits for a face, and then will light up his backpack when that face is visible.&#13;
'''&#13;
&#13;
import asyncio&#13;
import time&#13;
&#13;
import cozmo&#13;
&#13;
&#13;
def light_when_face(robot: cozmo.robot.Robot):&#13;
    '''The core of the light_when_face program'''&#13;
&#13;
    # Move lift down and tilt the head up&#13;
    robot.move_lift(-3)&#13;
    robot.set_head_angle(cozmo.robot.MAX_HEAD_ANGLE).wait_for_completed()&#13;
&#13;
    face = None&#13;
&#13;
    print("Press CTRL-C to quit")&#13;
    while True:&#13;
        if face and face.is_visible:&#13;
            robot.set_all_backpack_lights(cozmo.lights.blue_light)&#13;
        else:&#13;
            robot.set_backpack_lights_off()&#13;
&#13;
            # Wait until we we can see another face&#13;
            try:&#13;
                face = robot.world.wait_for_observed_face(timeout=30)&#13;
            except asyncio.TimeoutError:&#13;
                print("Didn't find a face.")&#13;
                return&#13;
&#13;
        time.sleep(.1)&#13;
&#13;
&#13;
cozmo.run_program(light_when_face, use_viewer=True, force_viewer_on_top=True)</script>
        <sys_created_by>Arnoud.Kooi</sys_created_by>
        <sys_created_on>2018-07-17 09:44:45</sys_created_on>
        <sys_id>ed30b8ea4f5b9f0035e0fdb28110c76d</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>Arnoud.Kooi</sys_updated_by>
        <sys_updated_on>2018-07-17 09:46:32</sys_updated_on>
        <test_parameters/>
    </x_snc_cozmo_guard_python_commands>
</record_update>
]]></payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>Arnoud.Kooi</sys_created_by>
        <sys_created_on>2019-03-05 21:13:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f535b04d4f8c33009881c5c18110c70b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>demo1.py</sys_name>
        <sys_package display_value="Cozmo Guard" source="x_snc_cozmo_guard">2df0e27d4fdf1f009881c5c18110c780</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Cozmo Guard">2df0e27d4fdf1f009881c5c18110c780</sys_scope>
        <sys_update_name>sys_metadata_link_f535b04d4f8c33009881c5c18110c70b</sys_update_name>
        <sys_updated_by>Arnoud.Kooi</sys_updated_by>
        <sys_updated_on>2019-03-05 21:13:44</sys_updated_on>
        <tablename>x_snc_cozmo_guard_python_commands</tablename>
    </sys_metadata_link>
</record_update>
